/*
 * File: app/view/MyGridPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyGridPanel', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.mygridpanel',

    height: 250,
    id: 'mygridpanel',
    itemId: 'mygridpanel',
    store: 'StoreEmp',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            selModel: Ext.create('Ext.selection.CheckboxModel', {
                showHeaderCheckbox: true
            }),
            columns: [
                {
                    xtype: 'rownumberer',
                    cls: 'grid_header',
                    width: 50,
                    align: 'center'
                },
                {
                    xtype: 'gridcolumn',
                    cls: 'grid_header',
                    align: 'center',
                    dataIndex: 'empId',
                    text: 'Emp Id'
                },
                {
                    xtype: 'gridcolumn',
                    cls: 'grid_header',
                    dataIndex: 'firstName',
                    text: 'First Name'
                },
                {
                    xtype: 'gridcolumn',
                    cls: 'grid_header',
                    dataIndex: 'middleName',
                    text: 'Middle Name'
                },
                {
                    xtype: 'gridcolumn',
                    cls: 'grid_header',
                    dataIndex: 'lastName',
                    text: 'Last Name'
                },
                {
                    xtype: 'gridcolumn',
                    cls: 'grid_header',
                    dataIndex: 'status',
                    text: 'Status'
                }
            ]
        });

        me.callParent(arguments);
    }

});